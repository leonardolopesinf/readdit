{"version":3,"sources":["components/Header/styles.tsx","styles/theme.ts","hooks/usePersist.tsx","hooks/useTheme.tsx","styles/GlobalStyle.tsx","context/ThemeContext.tsx","components/Header/ThemeSwitch/styles.tsx","components/Header/ThemeSwitch/index.tsx","components/Header/index.tsx","context/FilterContext.tsx","components/Posts/PostFilter/styles.tsx","components/Posts/PostFilter/index.tsx","services/reddit/index.ts","utils/removeArrayExcess.ts","components/LoadingContainer/index.tsx","utils/formatCreatedTime.ts","utils/formatUrl.ts","components/Picture/index.tsx","components/Posts/Post/styles.tsx","components/Posts/Post/index.tsx","components/Posts/PostSkeleton/styles.tsx","components/Posts/PostSkeleton/index.tsx","components/Posts/ShowMore/styles.tsx","components/Posts/ShowMore/index.tsx","components/Posts/PostList/styles.tsx","components/Posts/PostList/index.tsx","components/Posts/styles.tsx","components/Posts/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HeaderContainer","styled","header","props","theme","colors","primary","HeaderTitle","h1","highlightText","complementary","light","name","secondary","gray","background","text","purpleText","skeletonColor","skeletonHightlight","dark","lighten","darken","usePersist","key","initialValue","useState","localStorage","getItem","state","setState","useEffect","setItem","useTheme","themeName","setThemeName","useMemo","toggleTheme","useCallback","GlobalStyle","createGlobalStyle","ThemeContext","createContext","ThemeProvider","children","Provider","value","SwitchContainer","div","SwitchInput","ThemeSwitch","useContext","inputRef","useRef","switchValue","toggleSwitch","current","checked","data-testid","onClick","className","ref","defaultValue","defaultChecked","type","Header","FilterContext","FilterProvider","filter","setFilter","PostFilterContainer","PostFilterButton","button","active","filterNames","hot","new","top","PostFilter","handleChangeFilter","event","selectedFilter","currentTarget","Object","keys","map","buttonValue","index","buttonText","redditUrl","getPosts","limit","after","a","requestUrl","axios","get","subreddit","data","posts","status","response","Error","removeArrayExcess","list","length","excess","slice","LoadingContainer","displayLoading","Loading","loading","formatCreatedTime","milliseconds","now","moment","time","daysDiff","diff","hoursDiff","minutesDiff","formatUrl","url","replace","Picture","alt","src","handleError","img","onerror","onError","PostContainer","PostThumbnail","PostDescription","Post","post","thumbnail","title","created","target","rel","href","author","permalink","PostSkeletonContainer","PostSkeletonItem","PostSkeletonRow","PostSkeletonColumn","PostSkeleton","color","highlightColor","skeletons","i","push","generateSkeletons","ShowMoreButton","ShowMore","setLoading","handleClick","process","PostListContainer","ul","PostList","setPosts","getRedditPosts","lastPost","postsLimit","message","toast","handleShowMore","lastPostName","finally","PostsContainer","section","Posts","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69d150d2.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const HeaderContainer = styled.header`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 100%;\r\n  height: 9.1rem;\r\n\r\n  background-color: ${(props) => props.theme.colors.primary};\r\n`;\r\n\r\nexport const HeaderTitle = styled.h1`\r\n  font-size: 3.6rem;\r\n  line-height: 4.5rem;\r\n\r\n  user-select: none;\r\n\r\n  .react {\r\n    color: ${(props) => props.theme.colors.highlightText};\r\n  }\r\n\r\n  .js {\r\n    color: ${(props) => props.theme.colors.complementary};\r\n  }\r\n`;\r\n","import { darken, lighten } from \"polished\";\r\nimport { DefaultTheme } from \"styled-components\";\r\n\r\nconst light: DefaultTheme = {\r\n  name: \"light\",\r\n\r\n  colors: {\r\n    primary: \"#6324C6\",\r\n    secondary: \"#A7B0BE\",\r\n    complementary: \"#FFB800\",\r\n    gray: \"#4C5667\",\r\n\r\n    background: \"#ffffff\",\r\n\r\n    text: \"#000000\",\r\n    highlightText: \"#FFFFFF\",\r\n    purpleText: \"#6324C6\",\r\n\r\n    skeletonColor: \"\",\r\n    skeletonHightlight: \"\",\r\n  },\r\n};\r\n\r\nconst dark: DefaultTheme = {\r\n  name: \"dark\",\r\n\r\n  colors: {\r\n    primary: \"#6324C6\",\r\n    secondary: \"#A7B0BE\",\r\n    complementary: \"#FFB800\",\r\n    gray: lighten(0.2, \"#4C5667\"),\r\n\r\n    background: \"#18191c\",\r\n\r\n    text: darken(0.12, \"#ffffff\"),\r\n    highlightText: \"#FFFFFF\",\r\n    purpleText: lighten(0.15, \"#6324C6\"),\r\n\r\n    skeletonColor: \"#202020\",\r\n    skeletonHightlight: \"#444\",\r\n  },\r\n};\r\n\r\nexport { light, dark };\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\n\r\ntype Response = [string, Dispatch<SetStateAction<string>>];\r\n\r\nfunction usePersist(key: string, initialValue: string): Response {\r\n  const [state, setState] = useState<string>(() => {\r\n    const persistValue = localStorage.getItem(key);\r\n\r\n    return persistValue || initialValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, state);\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n\r\nexport default usePersist;\r\n","import { useCallback, useMemo } from \"react\";\r\nimport { DefaultTheme, ThemeName } from \"styled-components\";\r\nimport { dark, light } from \"../styles/theme\";\r\nimport usePersist from \"./usePersist\";\r\n\r\ntype Response = [\r\n  themeName: ThemeName,\r\n  currentTheme: DefaultTheme,\r\n  toggleTheme: () => void\r\n];\r\n\r\nfunction useTheme(): Response {\r\n  const [themeName, setThemeName] = usePersist(\"theme\", \"light\");\r\n\r\n  const theme = useMemo(\r\n    () => (themeName === \"light\" ? light : dark),\r\n    [themeName]\r\n  );\r\n\r\n  const toggleTheme = useCallback(() => {\r\n    setThemeName((state) => (state === \"light\" ? \"dark\" : \"light\"));\r\n  }, [setThemeName]);\r\n\r\n  return [themeName, theme, toggleTheme];\r\n}\r\n\r\nexport default useTheme;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        outline: 0;\r\n        box-sizing: border-box;\r\n    }\r\n    html{\r\n        font-family: 'Mulish', sans-serif;\r\n        font-size: 62.5%;\r\n        font-weight: lighter;\r\n        color: ${(props) => props.theme.colors.text};\r\n        background-color: ${(props) => props.theme.colors.background};\r\n\r\n        @media(max-width: 1024px){\r\n            font-size: 52.5%\r\n        }\r\n\r\n        @media(max-width: 768px){\r\n            font-size: 35%\r\n        }\r\n\r\n        @media(max-width:425px){\r\n            font-size: 26%\r\n        }\r\n  \r\n    }\r\n\r\n    a{\r\n        text-decoration: none;\r\n    }\r\n\r\n    ul{\r\n        list-style-type: none;\r\n    }\r\n\r\n    .Toastify__toast-body {\r\n        font-weight: 600;\r\n        font-size: 1.3rem;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { createContext } from \"react\";\r\nimport {\r\n  DefaultTheme,\r\n  ThemeName,\r\n  ThemeProvider as StyledThemeProvider,\r\n} from \"styled-components\";\r\nimport useTheme from \"../hooks/useTheme\";\r\nimport GlobalStyle from \"../styles/GlobalStyle\";\r\n\r\ntype ThemeContextType = {\r\n  themeName: ThemeName;\r\n  theme: DefaultTheme;\r\n  toggleTheme: () => void;\r\n};\r\n\r\nexport const ThemeContext = createContext({} as ThemeContextType);\r\n\r\nconst ThemeProvider: React.FC = ({ children }) => {\r\n  const [themeName, theme, toggleTheme] = useTheme();\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ themeName, theme, toggleTheme }}>\r\n      <StyledThemeProvider theme={theme}>\r\n        <>\r\n          <GlobalStyle />\r\n          {children}\r\n        </>\r\n      </StyledThemeProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import { darken, lighten } from \"polished\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const SwitchContainer = styled.div`\r\n  position: absolute;\r\n  right: 3rem;\r\n`;\r\n\r\nexport const SwitchInput = styled.div`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  width: 5.2rem;\r\n  height: 3rem;\r\n\r\n  padding: 0 0.2rem;\r\n\r\n  border-radius: 2rem;\r\n\r\n  background: ${(props) => darken(0.15, props.theme.colors.primary)};\r\n\r\n  font-size: 1.8rem;\r\n\r\n  cursor: pointer;\r\n  user-select: none;\r\n\r\n  .moon {\r\n    position: absolute;\r\n    left: 0;\r\n  }\r\n\r\n  .sun {\r\n    position: absolute;\r\n    right: 0;\r\n  }\r\n\r\n  input {\r\n    display: none;\r\n  }\r\n\r\n  .circle {\r\n    width: 2.6rem;\r\n    height: 2.6rem;\r\n\r\n    border-radius: 50%;\r\n\r\n    background: ${(props) => lighten(0.3, props.theme.colors.secondary)};\r\n\r\n    transition: margin-left 0.5s ease;\r\n\r\n    z-index: 1;\r\n  }\r\n\r\n  input:checked + .circle {\r\n    margin-left: 50%;\r\n  }\r\n`;\r\n","import React, { useCallback, useContext, useMemo, useRef } from \"react\";\r\nimport { ThemeContext } from \"../../../context/ThemeContext\";\r\nimport { SwitchContainer, SwitchInput } from \"./styles\";\r\n\r\nconst ThemeSwitch: React.FC = () => {\r\n  const { themeName, toggleTheme } = useContext(ThemeContext);\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const switchValue = useMemo(() => themeName === \"dark\", [themeName]);\r\n\r\n  const toggleSwitch = useCallback(() => {\r\n    const { current } = inputRef;\r\n\r\n    if (current) {\r\n      current.value = themeName === \"dark\" ? \"light\" : \"dark\";\r\n      current.checked = !switchValue;\r\n\r\n      toggleTheme();\r\n    }\r\n  }, [toggleTheme, themeName, switchValue]);\r\n\r\n  return (\r\n    <SwitchContainer>\r\n      <SwitchInput data-testid=\"theme-switch\" onClick={toggleSwitch}>\r\n        <span className=\"moon\">&#127772;</span>\r\n        <span className=\"sun\">&#127774;</span>\r\n        <input\r\n          data-testid=\"theme-input\"\r\n          ref={inputRef}\r\n          defaultValue={themeName}\r\n          defaultChecked={switchValue}\r\n          type=\"checkbox\"\r\n        />\r\n        <div className=\"circle\" />\r\n      </SwitchInput>\r\n    </SwitchContainer>\r\n  );\r\n};\r\n\r\nexport default ThemeSwitch;\r\n","import React from \"react\";\r\nimport { HeaderContainer, HeaderTitle } from \"./styles\";\r\nimport ThemeSwitch from \"./ThemeSwitch\";\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <HeaderContainer>\r\n      <HeaderTitle>\r\n        <span className=\"react\">REACT</span>\r\n        <span className=\"js\">JS</span>\r\n      </HeaderTitle>\r\n      <ThemeSwitch />\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, {\r\n  createContext,\r\n  Dispatch,\r\n  SetStateAction,\r\n  useState,\r\n} from \"react\";\r\n\r\ntype FilterContextType = {\r\n  filter: Reddit.PostFilter;\r\n  setFilter: Dispatch<SetStateAction<Reddit.PostFilter>>;\r\n};\r\n\r\nexport const FilterContext = createContext({} as FilterContextType);\r\n\r\nconst FilterProvider: React.FC = ({ children }) => {\r\n  const [filter, setFilter] = useState<Reddit.PostFilter>(\"hot\");\r\n\r\n  return (\r\n    <FilterContext.Provider value={{ filter, setFilter }}>\r\n      {children}\r\n    </FilterContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FilterProvider;\r\n","import { darken } from \"polished\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const PostFilterContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 100%;\r\n\r\n  margin-bottom: 2rem;\r\n\r\n  @media (max-width: 320px) {\r\n    flex-direction: column;\r\n\r\n    button {\r\n      width: 100%;\r\n      margin: 0 0 1rem 0;\r\n    }\r\n  }\r\n`;\r\n\r\ntype PostFilterButtonProps = {\r\n  active?: boolean;\r\n};\r\n\r\nexport const PostFilterButton = styled.button<PostFilterButtonProps>`\r\n  width: 20.2rem;\r\n  height: 4.8rem;\r\n\r\n  border: none;\r\n  border-radius: 0.8rem;\r\n\r\n  margin-right: 1.6rem;\r\n\r\n  background: ${(props) =>\r\n    props.active ? props.theme.colors.primary : props.theme.colors.secondary};\r\n\r\n  font-family: \"Mulish\", sans-serif;\r\n  font-weight: 600;\r\n  font-size: 2rem;\r\n  line-height: 2.5rem;\r\n\r\n  color: ${(props) => props.theme.colors.highlightText};\r\n\r\n  cursor: pointer;\r\n  user-select: none;\r\n\r\n  :hover {\r\n    background: ${(props) =>\r\n      props.active\r\n        ? props.theme.colors.primary\r\n        : darken(0.1, props.theme.colors.secondary)};\r\n  }\r\n\r\n  :last-child {\r\n    margin-right: 0;\r\n  }\r\n`;\r\n","import React, { MouseEvent, useCallback, useContext } from \"react\";\r\nimport { FilterContext } from \"../../../context/FilterContext\";\r\nimport { PostFilterButton, PostFilterContainer } from \"./styles\";\r\n\r\nconst filterNames: Posts.FilterNames = {\r\n  hot: \"Hot\",\r\n  new: \"News\",\r\n  top: \"Rising\",\r\n};\r\n\r\nconst PostFilter: React.FC = () => {\r\n  const { filter, setFilter } = useContext(FilterContext);\r\n\r\n  const handleChangeFilter = useCallback(\r\n    (event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>) => {\r\n      const { value: selectedFilter } = event.currentTarget;\r\n\r\n      setFilter(selectedFilter as Reddit.PostFilter);\r\n    },\r\n    [setFilter]\r\n  );\r\n\r\n  return (\r\n    <PostFilterContainer data-testid=\"filter-buttons\">\r\n      {Object.keys(filterNames).map((buttonValue, index) => {\r\n        const buttonText = filterNames[buttonValue as Reddit.PostFilter];\r\n\r\n        return (\r\n          <PostFilterButton\r\n            key={index}\r\n            value={buttonValue}\r\n            active={filter === buttonValue}\r\n            onClick={handleChangeFilter}\r\n          >\r\n            {buttonText}\r\n          </PostFilterButton>\r\n        );\r\n      })}\r\n    </PostFilterContainer>\r\n  );\r\n};\r\n\r\nexport default PostFilter;\r\n","import axios from \"axios\";\r\n\r\nexport const redditUrl = \"https://www.reddit.com\";\r\n\r\nexport const getPosts = async (\r\n  filter: Reddit.PostFilter,\r\n  limit: number,\r\n  after?: string\r\n) => {\r\n  try {\r\n    let requestUrl = `${redditUrl}/r/reactjs/${filter}.json?limit=${limit}`;\r\n\r\n    if (after) requestUrl += `&after=${after}`;\r\n\r\n    const subreddit = (await axios.get<Reddit.Subreddit>(requestUrl)).data;\r\n\r\n    const posts: Reddit.Post[] = subreddit.data.children;\r\n\r\n    return posts;\r\n  } catch (error: any) {\r\n    const status = error?.response?.status;\r\n\r\n    const message =\r\n      status === 404\r\n        ? \"Não foi possível encontrar os posts.\"\r\n        : \"Ocorreu um erro ao tentar buscar os posts.\";\r\n\r\n    throw new Error(message);\r\n  }\r\n};\r\n","const removeArrayExcess = (list: any[], limit: number) => {\r\n  const { length } = list;\r\n\r\n  const excess = length - limit;\r\n\r\n  const newList = list.slice(0, length - excess);\r\n\r\n  return newList;\r\n};\r\n\r\nexport default removeArrayExcess;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  displayLoading: boolean;\r\n  loading: React.FC;\r\n};\r\n\r\nconst LoadingContainer: React.FC<Props> = ({\r\n  displayLoading,\r\n  loading: Loading,\r\n  children,\r\n}) => {\r\n  return !displayLoading ? <>{children}</> : <Loading />;\r\n};\r\n\r\nexport default LoadingContainer;\r\n","import moment from \"moment\";\r\n\r\nconst formatCreatedTime = (milliseconds: number) => {\r\n  const now = moment();\r\n  const time = moment(milliseconds * 1000);\r\n\r\n  const daysDiff = now.diff(time, \"days\");\r\n\r\n  if (daysDiff >= 1) return `${daysDiff} dias`;\r\n\r\n  const hoursDiff = now.diff(time, \"hours\");\r\n\r\n  if (hoursDiff >= 1) return `${hoursDiff} horas`;\r\n\r\n  const minutesDiff = now.diff(time, \"minutes\");\r\n\r\n  if (minutesDiff >= 1) return `${minutesDiff} minutos`;\r\n\r\n  return \"poucos segundos\";\r\n};\r\n\r\nexport default formatCreatedTime;\r\n","const formatUrl = (url: string) => {\r\n  return url.replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, \"\");\r\n};\r\n\r\nexport default formatUrl;\r\n","import React, { SyntheticEvent, useCallback } from \"react\";\r\n\r\ntype Props = {\r\n  alt: string;\r\n  src: string;\r\n};\r\n\r\nconst Picture: React.FC<Props> = ({ alt, src }) => {\r\n  const handleError = useCallback(\r\n    (event: SyntheticEvent<HTMLImageElement, Event>) => {\r\n      const img = event.currentTarget;\r\n      const defaultImg = \"https://cdn-icons-png.flaticon.com/512/52/52053.png\";\r\n\r\n      img.onerror = null;\r\n      img.src = defaultImg;\r\n      img.className = \"error-image\";\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <img data-testid=\"picture\" src={src} alt={alt} onError={handleError} />\r\n  );\r\n};\r\n\r\nexport default Picture;\r\n","import { lighten } from \"polished\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const PostContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  padding: 1.2rem 0;\r\n`;\r\n\r\nexport const PostThumbnail = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 7.7rem;\r\n  min-width: 7.7rem;\r\n  height: 7.7rem;\r\n  min-height: 7.7rem;\r\n\r\n  background: ${(props) => props.theme.colors.secondary};\r\n  border-radius: 0.8rem;\r\n\r\n  margin-right: 1.3rem;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 0.8rem;\r\n  }\r\n\r\n  .error-image {\r\n    width: 80%;\r\n    height: 80%;\r\n  }\r\n`;\r\n\r\nexport const PostDescription = styled.div`\r\n  width: 100%;\r\n\r\n  overflow-x: hidden;\r\n\r\n  padding-right: 2rem;\r\n\r\n  font-size: 1.6rem;\r\n  line-height: 2rem;\r\n\r\n  overflow-wrap: break-word;\r\n\r\n  .title {\r\n    font-weight: 600;\r\n    font-size: 2rem;\r\n    line-height: 2.5rem;\r\n  }\r\n\r\n  div {\r\n    margin-bottom: 0.9rem;\r\n\r\n    .created {\r\n      color: ${(props) => props.theme.colors.gray};\r\n    }\r\n\r\n    .author {\r\n      color: ${(props) => props.theme.colors.purpleText};\r\n\r\n      :hover {\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n\r\n  .url {\r\n    display: block;\r\n    width: fit-content;\r\n    max-width: 100%;\r\n\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n\r\n    font-weight: bold;\r\n    color: ${(props) => props.theme.colors.text};\r\n\r\n    :hover {\r\n      color: ${(props) => lighten(0.5, props.theme.colors.text)};\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { redditUrl } from \"../../../services/reddit\";\r\nimport formatCreatedTime from \"../../../utils/formatCreatedTime\";\r\nimport formatUrl from \"../../../utils/formatUrl\";\r\nimport Picture from \"../../Picture\";\r\nimport { PostContainer, PostDescription, PostThumbnail } from \"./styles\";\r\n\r\ntype Props = {\r\n  post: Reddit.PostData;\r\n};\r\n\r\nconst Post: React.FC<Props> = ({ post }) => {\r\n  return (\r\n    <li data-testid=\"post\">\r\n      <div className=\"divider\" />\r\n      <PostContainer>\r\n        <PostThumbnail>\r\n          <Picture src={post.thumbnail} alt=\"post thumbnail\" />\r\n        </PostThumbnail>\r\n        <PostDescription>\r\n          <span className=\"title\">{post.title}</span>\r\n          <div>\r\n            <span className=\"created\" data-testid=\"post-send-date\">\r\n              enviado há {formatCreatedTime(post.created)} por{\" \"}\r\n            </span>\r\n            <a\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              href={`${redditUrl}/user/${post.author}`}\r\n              className=\"author\"\r\n            >\r\n              {post.author}\r\n            </a>\r\n          </div>\r\n          <a\r\n            data-testid=\"post-url\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href={`${redditUrl}${post.permalink}`}\r\n            className=\"url\"\r\n          >\r\n            {formatUrl(`${redditUrl}${post.permalink}`)}\r\n          </a>\r\n        </PostDescription>\r\n      </PostContainer>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PostSkeletonContainer = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport const PostSkeletonItem = styled.div`\r\n  width: 100%;\r\n  height: 10.1rem;\r\n\r\n  .divider {\r\n    opacity: 0.3;\r\n  }\r\n`;\r\n\r\nexport const PostSkeletonRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  margin: 1.2rem 0;\r\n\r\n  .image {\r\n    width: 7.7rem;\r\n    font-size: 7.7rem;\r\n    line-height: 7.7rem;\r\n\r\n    margin-right: 1.3rem;\r\n  }\r\n`;\r\n\r\nexport const PostSkeletonColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: 100%;\r\n\r\n  font-size: 2rem;\r\n  line-height: 2rem;\r\n\r\n  .title {\r\n    width: 30%;\r\n\r\n    margin-bottom: 0.5rem;\r\n\r\n    font-size: 2rem;\r\n    line-height: 2rem;\r\n  }\r\n\r\n  .created {\r\n    width: 40%;\r\n\r\n    margin-bottom: 0.9rem;\r\n  }\r\n\r\n  .url {\r\n    width: 70%;\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\nimport { ThemeContext } from \"../../../context/ThemeContext\";\r\nimport {\r\n  PostSkeletonColumn,\r\n  PostSkeletonContainer,\r\n  PostSkeletonItem,\r\n  PostSkeletonRow,\r\n} from \"./styles\";\r\n\r\nconst PostSkeleton: React.FC = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const generateSkeletons = () => {\r\n    const skeletons = [];\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n      skeletons.push(\r\n        <PostSkeletonItem data-testid=\"skeleton\" key={i}>\r\n          <div className=\"divider\" />\r\n          <PostSkeletonRow>\r\n            <div className=\"image\">\r\n              <Skeleton />\r\n            </div>\r\n            <PostSkeletonColumn>\r\n              <div className=\"title\">\r\n                <Skeleton />\r\n              </div>\r\n              <div className=\"created\">\r\n                <Skeleton />\r\n              </div>\r\n              <div className=\"url\">\r\n                <Skeleton />\r\n              </div>\r\n            </PostSkeletonColumn>\r\n          </PostSkeletonRow>\r\n        </PostSkeletonItem>\r\n      );\r\n    }\r\n\r\n    return skeletons;\r\n  };\r\n\r\n  return (\r\n    <PostSkeletonContainer data-testid=\"post-skeleton\">\r\n      <SkeletonTheme\r\n        color={theme.colors.skeletonColor}\r\n        highlightColor={theme.colors.skeletonHightlight}\r\n      >\r\n        {generateSkeletons()}\r\n      </SkeletonTheme>\r\n    </PostSkeletonContainer>\r\n  );\r\n};\r\n\r\nexport default PostSkeleton;\r\n","import { darken } from \"polished\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ShowMoreButton = styled.button`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 98%;\r\n  height: 4.8rem;\r\n\r\n  margin: 0.9rem 0 0 0;\r\n\r\n  font-weight: 600;\r\n  font-size: 2rem;\r\n  line-height: 2.5rem;\r\n  color: ${(props) => props.theme.colors.highlightText};\r\n\r\n  background: ${(props) => props.theme.colors.primary};\r\n  border: none;\r\n  border-radius: 0.8rem;\r\n\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: ${(props) => darken(0.05, props.theme.colors.primary)};\r\n  }\r\n\r\n  .plus {\r\n    position: relative;\r\n\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    margin-right: 1.3rem;\r\n  }\r\n\r\n  .bar-one,\r\n  .bar-two {\r\n    position: absolute;\r\n\r\n    width: 100%;\r\n    height: 0.3rem;\r\n\r\n    background: ${(props) => props.theme.colors.highlightText};\r\n\r\n    border-radius: 0.2rem;\r\n  }\r\n\r\n  .bar-two {\r\n    transform: rotate(90deg);\r\n  }\r\n`;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { ShowMoreButton } from \"./styles\";\r\n\r\ntype Props = {\r\n  onClick: () => Promise<void>;\r\n};\r\n\r\nconst ShowMore: React.FC<Props> = ({ onClick }) => {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const handleClick = useCallback(async () => {\r\n    setLoading(true);\r\n\r\n    await onClick();\r\n\r\n    setLoading(false);\r\n  }, [onClick]);\r\n\r\n  return (\r\n    <ShowMoreButton onClick={handleClick} data-testid=\"show-more-button\">\r\n      {!loading ? (\r\n        <>\r\n          <div className=\"plus\">\r\n            <div className=\"bar-one\" />\r\n            <div className=\"bar-two\" />\r\n          </div>\r\n          <span>Ver Mais</span>\r\n        </>\r\n      ) : (\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/assets/loading.svg`}\r\n          alt=\"loading\"\r\n        />\r\n      )}\r\n    </ShowMoreButton>\r\n  );\r\n};\r\n\r\nexport default ShowMore;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PostListContainer = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  width: 100%;\r\n\r\n  li {\r\n    width: 100%;\r\n  }\r\n\r\n  .divider {\r\n    height: 0.1rem;\r\n    background: ${(props) => props.theme.colors.gray};\r\n  }\r\n\r\n  .error-message {\r\n    margin-top: 1.5%;\r\n\r\n    font-weight: 700;\r\n    font-size: 2rem;\r\n    line-height: 2.5rem;\r\n\r\n    color: ${(props) => props.theme.colors.text};\r\n  }\r\n`;\r\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FilterContext } from \"../../../context/FilterContext\";\r\nimport { getPosts } from \"../../../services/reddit\";\r\nimport removeArrayExcess from \"../../../utils/removeArrayExcess\";\r\nimport LoadingContainer from \"../../LoadingContainer\";\r\nimport Post from \"../Post\";\r\nimport PostSkeleton from \"../PostSkeleton\";\r\nimport ShowMore from \"../ShowMore\";\r\nimport { PostListContainer } from \"./styles\";\r\n\r\nconst PostList: React.FC = () => {\r\n  const { filter } = useContext(FilterContext);\r\n\r\n  const [posts, setPosts] = useState<Reddit.Post[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  const getRedditPosts = useCallback(\r\n    async (lastPost?: string) => {\r\n      try {\r\n        const postsLimit = 10;\r\n\r\n        let posts = await getPosts(filter, postsLimit, lastPost);\r\n\r\n        if (!lastPost && posts.length > postsLimit)\r\n          posts = removeArrayExcess(posts, postsLimit);\r\n\r\n        setPosts((state) => (lastPost ? [...state, ...posts] : posts));\r\n      } catch (error: any) {\r\n        const { message } = error;\r\n\r\n        toast(message, { type: \"error\" });\r\n\r\n        setPosts([]);\r\n      }\r\n    },\r\n    [filter]\r\n  );\r\n\r\n  const handleShowMore = useCallback(async () => {\r\n    const lastPost = posts[posts.length - 1];\r\n\r\n    const lastPostName = lastPost.data.name;\r\n\r\n    await getRedditPosts(lastPostName);\r\n  }, [getRedditPosts, posts]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    getRedditPosts().finally(() => setLoading(false));\r\n\r\n    return () => {\r\n      setLoading(false);\r\n    };\r\n  }, [getRedditPosts]);\r\n\r\n  return (\r\n    <PostListContainer data-testid=\"post-list\">\r\n      <LoadingContainer displayLoading={loading} loading={PostSkeleton}>\r\n        {posts.length > 0 ? (\r\n          posts?.map(({ data: post }, index) => (\r\n            <Post post={post} key={post.name + index} />\r\n          ))\r\n        ) : (\r\n          <span data-testid=\"error-message\" className=\"eror-message\">\r\n            Nenhum post foi encontrado.\r\n          </span>\r\n        )}\r\n      </LoadingContainer>\r\n      {posts.length >= 10 && <ShowMore onClick={handleShowMore} />}\r\n    </PostListContainer>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PostsContainer = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  padding: 2.1rem 5.7rem 3.8rem 5.7rem;\r\n`;\r\n","import React from \"react\";\r\nimport FilterProvider from \"../../context/FilterContext\";\r\nimport PostFilter from \"./PostFilter\";\r\nimport PostList from \"./PostList\";\r\nimport { PostsContainer } from \"./styles\";\r\n\r\nconst Posts: React.FC = () => {\r\n  return (\r\n    <PostsContainer>\r\n      <FilterProvider>\r\n        <PostFilter />\r\n        <PostList />\r\n      </FilterProvider>\r\n    </PostsContainer>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./components/Header\";\nimport Posts from \"./components/Posts\";\nimport ThemeProvider from \"./context/ThemeContext\";\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <ToastContainer />\n      <Header />\n      <main>\n        <Posts />\n      </main>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}